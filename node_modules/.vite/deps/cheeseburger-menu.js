import {
  require_prop_types
} from "./chunk-PAYM7N4Q.js";
import {
  __commonJS,
  require_react
} from "./chunk-2YIMICFJ.js";

// node_modules/react-easy-swipe/lib/react-swipe.js
var require_react_swipe = __commonJS({
  "node_modules/react-easy-swipe/lib/react-swipe.js"(exports) {
    (function(global, factory) {
      if (typeof define === "function" && define.amd) {
        define(["exports", "react", "prop-types"], factory);
      } else if (typeof exports !== "undefined") {
        factory(exports, require_react(), require_prop_types());
      } else {
        var mod = {
          exports: {}
        };
        factory(mod.exports, global.react, global.propTypes);
        global.reactSwipe = mod.exports;
      }
    })(exports, function(exports2, _react, _propTypes) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      exports2.setHasSupportToCaptureOption = setHasSupportToCaptureOption;
      var _react2 = _interopRequireDefault(_react);
      var _propTypes2 = _interopRequireDefault(_propTypes);
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }
      var _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }
      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      var _createClass = /* @__PURE__ */ function() {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();
      function _possibleConstructorReturn(self2, call) {
        if (!self2) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self2;
      }
      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      var supportsCaptureOption = false;
      function setHasSupportToCaptureOption(hasSupport) {
        supportsCaptureOption = hasSupport;
      }
      try {
        addEventListener("test", null, Object.defineProperty({}, "capture", { get: function get() {
          setHasSupportToCaptureOption(true);
        } }));
      } catch (e) {
      }
      function getSafeEventHandlerOpts() {
        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { capture: true };
        return supportsCaptureOption ? options : false;
      }
      function getPosition(event) {
        if ("touches" in event) {
          var _event$touches$ = event.touches[0], pageX = _event$touches$.pageX, pageY = _event$touches$.pageY;
          return { x: pageX, y: pageY };
        }
        var screenX = event.screenX, screenY = event.screenY;
        return { x: screenX, y: screenY };
      }
      var ReactSwipe = function(_Component) {
        _inherits(ReactSwipe2, _Component);
        function ReactSwipe2() {
          var _ref;
          _classCallCheck(this, ReactSwipe2);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          var _this = _possibleConstructorReturn(this, (_ref = ReactSwipe2.__proto__ || Object.getPrototypeOf(ReactSwipe2)).call.apply(_ref, [this].concat(args)));
          _this._handleSwipeStart = _this._handleSwipeStart.bind(_this);
          _this._handleSwipeMove = _this._handleSwipeMove.bind(_this);
          _this._handleSwipeEnd = _this._handleSwipeEnd.bind(_this);
          _this._onMouseDown = _this._onMouseDown.bind(_this);
          _this._onMouseMove = _this._onMouseMove.bind(_this);
          _this._onMouseUp = _this._onMouseUp.bind(_this);
          _this._setSwiperRef = _this._setSwiperRef.bind(_this);
          return _this;
        }
        _createClass(ReactSwipe2, [{
          key: "componentDidMount",
          value: function componentDidMount() {
            if (this.swiper) {
              this.swiper.addEventListener("touchmove", this._handleSwipeMove, getSafeEventHandlerOpts({
                capture: true,
                passive: false
              }));
            }
          }
        }, {
          key: "componentWillUnmount",
          value: function componentWillUnmount() {
            if (this.swiper) {
              this.swiper.removeEventListener("touchmove", this._handleSwipeMove, getSafeEventHandlerOpts({
                capture: true,
                passive: false
              }));
            }
          }
        }, {
          key: "_onMouseDown",
          value: function _onMouseDown(event) {
            if (!this.props.allowMouseEvents) {
              return;
            }
            this.mouseDown = true;
            document.addEventListener("mouseup", this._onMouseUp);
            document.addEventListener("mousemove", this._onMouseMove);
            this._handleSwipeStart(event);
          }
        }, {
          key: "_onMouseMove",
          value: function _onMouseMove(event) {
            if (!this.mouseDown) {
              return;
            }
            this._handleSwipeMove(event);
          }
        }, {
          key: "_onMouseUp",
          value: function _onMouseUp(event) {
            this.mouseDown = false;
            document.removeEventListener("mouseup", this._onMouseUp);
            document.removeEventListener("mousemove", this._onMouseMove);
            this._handleSwipeEnd(event);
          }
        }, {
          key: "_handleSwipeStart",
          value: function _handleSwipeStart(event) {
            var _getPosition = getPosition(event), x = _getPosition.x, y = _getPosition.y;
            this.moveStart = { x, y };
            this.props.onSwipeStart(event);
          }
        }, {
          key: "_handleSwipeMove",
          value: function _handleSwipeMove(event) {
            if (!this.moveStart) {
              return;
            }
            var _getPosition2 = getPosition(event), x = _getPosition2.x, y = _getPosition2.y;
            var deltaX = x - this.moveStart.x;
            var deltaY = y - this.moveStart.y;
            this.moving = true;
            var shouldPreventDefault = this.props.onSwipeMove({
              x: deltaX,
              y: deltaY
            }, event);
            if (shouldPreventDefault && event.cancelable) {
              event.preventDefault();
            }
            this.movePosition = { deltaX, deltaY };
          }
        }, {
          key: "_handleSwipeEnd",
          value: function _handleSwipeEnd(event) {
            this.props.onSwipeEnd(event);
            var tolerance = this.props.tolerance;
            if (this.moving && this.movePosition) {
              if (this.movePosition.deltaX < -tolerance) {
                this.props.onSwipeLeft(1, event);
              } else if (this.movePosition.deltaX > tolerance) {
                this.props.onSwipeRight(1, event);
              }
              if (this.movePosition.deltaY < -tolerance) {
                this.props.onSwipeUp(1, event);
              } else if (this.movePosition.deltaY > tolerance) {
                this.props.onSwipeDown(1, event);
              }
            }
            this.moveStart = null;
            this.moving = false;
            this.movePosition = null;
          }
        }, {
          key: "_setSwiperRef",
          value: function _setSwiperRef(node) {
            this.swiper = node;
            this.props.innerRef(node);
          }
        }, {
          key: "render",
          value: function render() {
            var _props = this.props, tagName = _props.tagName, className = _props.className, style = _props.style, children = _props.children, allowMouseEvents = _props.allowMouseEvents, onSwipeUp = _props.onSwipeUp, onSwipeDown = _props.onSwipeDown, onSwipeLeft = _props.onSwipeLeft, onSwipeRight = _props.onSwipeRight, onSwipeStart = _props.onSwipeStart, onSwipeMove = _props.onSwipeMove, onSwipeEnd = _props.onSwipeEnd, innerRef = _props.innerRef, tolerance = _props.tolerance, props = _objectWithoutProperties(_props, ["tagName", "className", "style", "children", "allowMouseEvents", "onSwipeUp", "onSwipeDown", "onSwipeLeft", "onSwipeRight", "onSwipeStart", "onSwipeMove", "onSwipeEnd", "innerRef", "tolerance"]);
            return _react2.default.createElement(
              this.props.tagName,
              _extends({
                ref: this._setSwiperRef,
                onMouseDown: this._onMouseDown,
                onTouchStart: this._handleSwipeStart,
                onTouchEnd: this._handleSwipeEnd,
                className,
                style
              }, props),
              children
            );
          }
        }]);
        return ReactSwipe2;
      }(_react.Component);
      ReactSwipe.displayName = "ReactSwipe";
      ReactSwipe.propTypes = {
        tagName: _propTypes2.default.string,
        className: _propTypes2.default.string,
        style: _propTypes2.default.object,
        children: _propTypes2.default.node,
        allowMouseEvents: _propTypes2.default.bool,
        onSwipeUp: _propTypes2.default.func,
        onSwipeDown: _propTypes2.default.func,
        onSwipeLeft: _propTypes2.default.func,
        onSwipeRight: _propTypes2.default.func,
        onSwipeStart: _propTypes2.default.func,
        onSwipeMove: _propTypes2.default.func,
        onSwipeEnd: _propTypes2.default.func,
        innerRef: _propTypes2.default.func,
        tolerance: _propTypes2.default.number.isRequired
      };
      ReactSwipe.defaultProps = {
        tagName: "div",
        allowMouseEvents: false,
        onSwipeUp: function onSwipeUp() {
        },
        onSwipeDown: function onSwipeDown() {
        },
        onSwipeLeft: function onSwipeLeft() {
        },
        onSwipeRight: function onSwipeRight() {
        },
        onSwipeStart: function onSwipeStart() {
        },
        onSwipeMove: function onSwipeMove() {
        },
        onSwipeEnd: function onSwipeEnd() {
        },
        innerRef: function innerRef() {
        },
        tolerance: 0
      };
      exports2.default = ReactSwipe;
    });
  }
});

// node_modules/react-easy-swipe/lib/index.js
var require_lib = __commonJS({
  "node_modules/react-easy-swipe/lib/index.js"(exports) {
    (function(global, factory) {
      if (typeof define === "function" && define.amd) {
        define(["exports", "./react-swipe"], factory);
      } else if (typeof exports !== "undefined") {
        factory(exports, require_react_swipe());
      } else {
        var mod = {
          exports: {}
        };
        factory(mod.exports, global.reactSwipe);
        global.index = mod.exports;
      }
    })(exports, function(exports2, _reactSwipe) {
      "use strict";
      Object.defineProperty(exports2, "__esModule", {
        value: true
      });
      var _reactSwipe2 = _interopRequireDefault(_reactSwipe);
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }
      exports2.default = _reactSwipe2.default;
    });
  }
});

// node_modules/cheeseburger-menu/dist/index.js
var require_dist = __commonJS({
  "node_modules/cheeseburger-menu/dist/index.js"(exports, module) {
    (function webpackUniversalModuleDefinition(root, factory) {
      if (typeof exports === "object" && typeof module === "object")
        module.exports = factory(require_react(), require_lib());
      else if (typeof define === "function" && define.amd)
        define("cheeseburger-menu", ["React", "react-easy-swipe"], factory);
      else if (typeof exports === "object")
        exports["cheeseburger-menu"] = factory(require_react(), require_lib());
      else
        root["cheeseburger-menu"] = factory(root["React"], root["react-easy-swipe"]);
    })(typeof self !== "undefined" ? self : exports, function(__WEBPACK_EXTERNAL_MODULE__639__, __WEBPACK_EXTERNAL_MODULE__7__) {
      return (
        /******/
        function() {
          "use strict";
          var __webpack_modules__ = {
            /***/
            7: (
              /***/
              function(module2) {
                module2.exports = __WEBPACK_EXTERNAL_MODULE__7__;
              }
            ),
            /***/
            639: (
              /***/
              function(module2) {
                module2.exports = __WEBPACK_EXTERNAL_MODULE__639__;
              }
            )
            /******/
          };
          var __webpack_module_cache__ = {};
          function __webpack_require__(moduleId) {
            var cachedModule = __webpack_module_cache__[moduleId];
            if (cachedModule !== void 0) {
              return cachedModule.exports;
            }
            var module2 = __webpack_module_cache__[moduleId] = {
              /******/
              // no module.id needed
              /******/
              // no module.loaded needed
              /******/
              exports: {}
              /******/
            };
            __webpack_modules__[moduleId](module2, module2.exports, __webpack_require__);
            return module2.exports;
          }
          !function() {
            __webpack_require__.n = function(module2) {
              var getter = module2 && module2.__esModule ? (
                /******/
                function() {
                  return module2["default"];
                }
              ) : (
                /******/
                function() {
                  return module2;
                }
              );
              __webpack_require__.d(getter, { a: getter });
              return getter;
            };
          }();
          !function() {
            __webpack_require__.d = function(exports2, definition) {
              for (var key in definition) {
                if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports2, key)) {
                  Object.defineProperty(exports2, key, { enumerable: true, get: definition[key] });
                }
              }
            };
          }();
          !function() {
            __webpack_require__.o = function(obj, prop) {
              return Object.prototype.hasOwnProperty.call(obj, prop);
            };
          }();
          !function() {
            __webpack_require__.r = function(exports2) {
              if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                Object.defineProperty(exports2, Symbol.toStringTag, { value: "Module" });
              }
              Object.defineProperty(exports2, "__esModule", { value: true });
            };
          }();
          var __webpack_exports__ = {};
          !function() {
            __webpack_require__.r(__webpack_exports__);
            __webpack_require__.d(__webpack_exports__, {
              "default": function() {
                return (
                  /* binding */
                  src
                );
              }
            });
            var external_commonjs_react_commonjs2_react_amd_React_root_React_ = __webpack_require__(639);
            var external_commonjs_react_commonjs2_react_amd_React_root_React_default = __webpack_require__.n(external_commonjs_react_commonjs2_react_amd_React_root_React_);
            var external_react_easy_swipe_ = __webpack_require__(7);
            var external_react_easy_swipe_default = __webpack_require__.n(external_react_easy_swipe_);
            ;
            function r(e) {
              var t, f, n = "";
              if ("string" == typeof e || "number" == typeof e) n += e;
              else if ("object" == typeof e) if (Array.isArray(e)) for (t = 0; t < e.length; t++) e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
              else for (t in e) e[t] && (n && (n += " "), n += t);
              return n;
            }
            function clsx() {
              for (var e, t, f = 0, n = ""; f < arguments.length; ) (e = arguments[f++]) && (t = r(e)) && (n && (n += " "), n += t);
              return n;
            }
            var dist_clsx = clsx;
            ;
            var __assign = function() {
              __assign = Object.assign || function(t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) {
                  s = arguments[i];
                  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
                }
                return t;
              };
              return __assign.apply(this, arguments);
            };
            var overlayStyle = function(options) {
              return {
                position: "fixed",
                top: options.topOffset,
                bottom: options.bottomOffset,
                left: 0,
                right: 0,
                zIndex: 1001,
                background: "rgba(0, 0, 0, 0.3)",
                opacity: 0,
                transition: "opacity ".concat(options.transitionTime, "s, transform 0s ").concat(options.transitionTime, "s"),
                transform: "translate3d(".concat(options.isLeft ? "" : "-", "100%, 0px, 0px)")
              };
            };
            var overlayActiveStyle = function(options) {
              return __assign(__assign({}, overlayStyle(options)), { opacity: 1, transition: "opacity ".concat(options.transitionTime, "s"), transform: "none" });
            };
            var menuOuterStyle = function(options) {
              return {
                position: "fixed",
                left: options.isLeft ? 0 : "inherit",
                right: options.isLeft ? "inherit" : 0,
                top: options.topOffset,
                bottom: options.bottomOffset,
                zIndex: 1002,
                width: options.width,
                maxWidth: "80%",
                transition: "transform ".concat(options.transitionTime, "s"),
                transform: getSkew(options) + "translate3d(".concat(options.isLeft ? "-" : "", "100%, 0px, 0px)"),
                transformOrigin: "left",
                backgroundColor: options.backgroundColor
              };
            };
            var menuOuterActiveStyle = function(options) {
              return __assign(__assign({}, menuOuterStyle(options)), { transform: getSkew(options) + "translate3d(0px, 0px, 0px)" });
            };
            var menuShadowStyle = function(options) {
              return {
                position: "absolute",
                zIndex: -1,
                width: "100%",
                height: "100%",
                transition: "opacity ".concat(options.transitionTime, "s"),
                boxShadow: options.showShadow ? "0 0 15px 0 rgba(0, 0, 0, .2)" : "none",
                opacity: 0,
                top: 0,
                bottom: 0,
                left: 0,
                right: 0
              };
            };
            var menuShadowActiveStyle = function(options) {
              return __assign(__assign({}, menuShadowStyle(options)), { opacity: 1 });
            };
            var menuInnerStyle = function(options) {
              return {
                height: "100%",
                paddingBottom: options.topOffset,
                overflowY: "auto"
              };
            };
            function getSkew(options) {
              return options.skewY ? "skewY(".concat(options.skewY, "deg) ") : "";
            }
            ;
            var __extends = /* @__PURE__ */ function() {
              var extendStatics = function(d, b) {
                extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
                  d2.__proto__ = b2;
                } || function(d2, b2) {
                  for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
                };
                return extendStatics(d, b);
              };
              return function(d, b) {
                if (typeof b !== "function" && b !== null)
                  throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
                extendStatics(d, b);
                function __() {
                  this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
            }();
            var src_assign = function() {
              src_assign = Object.assign || function(t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) {
                  s = arguments[i];
                  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
                }
                return t;
              };
              return src_assign.apply(this, arguments);
            };
            var IDLE = "idle";
            var VERTICAL = "vertical";
            var HORIZONTAL = "horizontal";
            var CheeseburgerMenu = (
              /** @class */
              function(_super) {
                __extends(CheeseburgerMenu2, _super);
                function CheeseburgerMenu2(props) {
                  var _this = _super.call(this, props) || this;
                  _this.state = {
                    swiping: false,
                    direction: IDLE,
                    swipePosition: { x: 0, y: 0 },
                    menuExtraStyle: {}
                  };
                  _this.onSwipeStart = _this.onSwipeStart.bind(_this);
                  _this.onSwipeMove = _this.onSwipeMove.bind(_this);
                  _this.onSwipeEnd = _this.onSwipeEnd.bind(_this);
                  return _this;
                }
                CheeseburgerMenu2.prototype.onSwipeStart = function() {
                  if (this.props.isOpen) {
                    this.setState({
                      swiping: true
                    });
                  }
                };
                CheeseburgerMenu2.prototype.onSwipeMove = function(position, event) {
                  if (this.state.swiping) {
                    var options = this.getOptions();
                    var direction = this.state.direction;
                    if (direction === IDLE) {
                      var swipeThreshold = options.width / 15;
                      var pastThreshold = Math.abs(position.x) > swipeThreshold || Math.abs(position.y) > swipeThreshold;
                      if (pastThreshold) {
                        if ((!this.props.right && position.x < 0 || this.props.right && position.x > 0) && Math.abs(position.x) > Math.abs(position.y)) {
                          direction = HORIZONTAL;
                        } else {
                          direction = VERTICAL;
                        }
                      }
                    }
                    if (direction === HORIZONTAL) {
                      var swipeClosing = !this.props.right && position.x < 0 || this.props.right && position.x > 0;
                      var translateX = swipeClosing ? position.x : 0;
                      this.setState({
                        direction,
                        swipePosition: position,
                        menuExtraStyle: {
                          transform: getSkew(options) + "translate3d(".concat(translateX, "px, 0px, 0px)"),
                          transition: "transform 0s"
                        }
                      });
                      event.preventDefault();
                    }
                    if (direction === VERTICAL) {
                      this.setState({
                        direction,
                        swipePosition: { x: 0, y: 0 },
                        menuExtraStyle: {}
                      });
                    }
                  }
                };
                CheeseburgerMenu2.prototype.onSwipeEnd = function() {
                  var swipeCloseThreshold = this.getOptions().width / 3;
                  if (!this.props.right && this.state.swipePosition.x < -swipeCloseThreshold || this.props.right && this.state.swipePosition.x > swipeCloseThreshold) {
                    this.props.closeCallback();
                  }
                  this.setState({
                    swiping: false,
                    direction: IDLE,
                    swipePosition: { x: 0, y: 0 },
                    menuExtraStyle: {}
                  });
                };
                CheeseburgerMenu2.prototype.getOptions = function() {
                  var _a, _b, _c, _d, _e, _f;
                  return {
                    isLeft: !this.props.right,
                    transitionTime: (_a = this.props.transitionTime) !== null && _a !== void 0 ? _a : 0.3,
                    topOffset: (_b = this.props.topOffset) !== null && _b !== void 0 ? _b : 0,
                    bottomOffset: (_c = this.props.bottomOffset) !== null && _c !== void 0 ? _c : 0,
                    width: (_d = this.props.width) !== null && _d !== void 0 ? _d : 300,
                    backgroundColor: (_e = this.props.backgroundColor) !== null && _e !== void 0 ? _e : "white",
                    showShadow: !this.props.noShadow,
                    skewY: (_f = this.props.skewY) !== null && _f !== void 0 ? _f : 0
                  };
                };
                CheeseburgerMenu2.prototype.render = function() {
                  var _a = this.props, isOpen = _a.isOpen, closeCallback = _a.closeCallback, className = _a.className, overlayClassName = _a.overlayClassName, outerClassName = _a.outerClassName, innerClassName = _a.innerClassName, shadowClassName = _a.shadowClassName, children = _a.children;
                  var options = this.getOptions();
                  var baseMenuOuterStyle = isOpen ? menuOuterActiveStyle(options) : menuOuterStyle(options);
                  var currentMenuOuterStyle = src_assign(src_assign({}, baseMenuOuterStyle), this.state.menuExtraStyle);
                  return external_commonjs_react_commonjs2_react_amd_React_root_React_default().createElement(
                    "div",
                    { className: dist_clsx("cheeseburger-menu", className, { open: isOpen }) },
                    external_commonjs_react_commonjs2_react_amd_React_root_React_default().createElement("div", { className: dist_clsx("cheeseburger-menu-overlay", overlayClassName), style: isOpen ? overlayActiveStyle(options) : overlayStyle(options), onClick: closeCallback }),
                    external_commonjs_react_commonjs2_react_amd_React_root_React_default().createElement(
                      external_react_easy_swipe_default(),
                      { onSwipeStart: this.onSwipeStart, onSwipeMove: this.onSwipeMove, onSwipeEnd: this.onSwipeEnd },
                      external_commonjs_react_commonjs2_react_amd_React_root_React_default().createElement(
                        "div",
                        { className: dist_clsx("cheeseburger-menu-outer", outerClassName), style: currentMenuOuterStyle },
                        external_commonjs_react_commonjs2_react_amd_React_root_React_default().createElement("div", { className: dist_clsx("cheeseburger-menu-inner", innerClassName), style: menuInnerStyle(options) }, children),
                        external_commonjs_react_commonjs2_react_amd_React_root_React_default().createElement("div", { className: dist_clsx("cheeseburger-menu-shadow", shadowClassName), style: isOpen ? menuShadowActiveStyle(options) : menuShadowStyle(options) })
                      )
                    )
                  );
                };
                return CheeseburgerMenu2;
              }(external_commonjs_react_commonjs2_react_amd_React_root_React_.Component)
            );
            var src = CheeseburgerMenu;
          }();
          return __webpack_exports__;
        }()
      );
    });
  }
});

// node_modules/cheeseburger-menu/index.js
var require_cheeseburger_menu = __commonJS({
  "node_modules/cheeseburger-menu/index.js"(exports, module) {
    var CheeseburgerMenu = require_dist();
    module.exports = CheeseburgerMenu;
  }
});
export default require_cheeseburger_menu();
//# sourceMappingURL=cheeseburger-menu.js.map
